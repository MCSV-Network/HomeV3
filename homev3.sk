#HomeV3 - home.sk、homev2を改良したSkript - Created by ringo360xd
#!=======[DO NOT EDIT]=======
Variables:
	#*Prefix
	{homev3.prefix} = "&a[&bHomeV3&a]&f"
	#*Version
	{hv3.version} = "&dV3&8.0.3"
#?Skript読み込み時のメッセージ
on skript load:
	send "[HomeV3] Successfully Enabled HomeV3" to console
	send "&b=================" to console
	send "&bHome %{hv3.version}%" to console
	send "Created by ringoXD" to console
	send "Github: &bhttps://github.com/MCSV-Network/HomeV3" to console
	send "&b=================" to console
#?Make Generating Screen
	if {hv3gui_generating} is not set:
		wait a tick
		set {hv3gui_generating} to hopper inventory named "&bHome&dV3 &7| &8準備中..."
		set {_glass} to light gray glass pane named "&7GUIを生成中です。しばらくお待ちください..."
		set {_s} to 0
		loop 5 times:
			set slot {_s} of {hv3gui_generating} to {_glass}
			add 1 to {_s}
		send "[HomeV3] Created HomeV3 Generating Screen!" to console
command /hv3manuallycreateGenScreen:
	permission: admin
	trigger:
		set {hv3gui_generating} to hopper inventory named "&bHome&dV3 &7| &8準備中..."
		set {_glass} to light gray glass pane named "&7GUIを生成中です。しばらくお待ちください..."
		set {_s} to 0
		loop 5 times:
			set slot {_s} of {hv3gui_generating} to {_glass}
			add 1 to {_s}
		send "[HomeV3] Created HomeV3 Generating Screen!" to console
		send "&a[HomeV3] Created HomeV3 Generating Screen!" to player
#?Cancel Inventory Click
on inventory click:
	if clicked inventory is {hv3gui_generating}:
		cancel event
#?Delete
on leave:
	if {temp.hv3_list.%player%} is set:
		delete {temp.hv3_list.%player%}
#!=======[DO NOT EDIT]=======

#*コマンド============
command /homev3 [<text>] [<text>] [<text>]:
	permission: admin
	permission message: HomeV3は製作中です!
	executable by: players
	trigger:
		if arg-1 is not set:
			if {temp.hv3_list.%player%} is not set:
				debug(player, "hv3_list is none. Creating...", "warn")
				homev3list(player)
				wait a tick
			send "&e登録済みのhome&7: &a%{temp.hv3_list.%player%}%"
			send "&a/homev3 [ホーム名] &7で登録したホームへテレポートできます!"
			send "&7例: &a/homev3 ringohouse"
			stop

		if arg-1 is set:

			#*Help
			if arg-1 is "help":
				homev3help(player)
				stop
			set {_uuid} to player's uuid
			set {_arg2} to arg-2
			#*Home warp
			if arg-1 is "warp":
				if arg-2 is not set:
					send "%{homev3.prefix}%&cホーム名を指定してください!"
					stop
				permcheck(player)
				set {_x} to {_arg2}
				set {_n} to 1
				debug(player, "count: %{homev3.limitcount.%player%}%", "info")
				loop {homev3.limitcount.%player%} time:
					if {_x} is {homev3.name.%{_n}%.%{_uuid}%}:
						debug(player, "arg-2 is %{homev3.name.%{_n}%.%{_uuid}%}%. (found)", "info")
						teleport player to {homev3.loc.%{_n}%.%{_uuid}%}
						send "%{homev3.prefix}% &a%{homev3.name.%{_n}%.%{_uuid}%}%にテレポートしました!"
						delete {homev3.limitcount.%player%}
						stop
					debug(player, "arg-2 is not %{homev3.name.%{_n}%.%{_uuid}%}%.", "warn")
					add 1 to {_n}
				send "&cそのようなHomeは存在しません! 正しく入力しているか確認してください。"
				stop

			#*Home set
			if arg-1 is "set":
				set {_hv3l} to location of player
				homev3set(player, {_arg2}, {_hv3l})
				stop
			
			#*Home delete
			if arg-1 is "delete":
				set {_x} to {_arg2}
				permcheck(player)
				set {_n} to 1
				debug(player, "count: %{homev3.limitcount.%player%}%", "info")
				loop {homev3.limitcount.%player%} time:
					if {_x} is {homev3.name.%{_n}%.%{_uuid}%}:
						debug(player, "arg-2 is %{homev3.name.%{_n}%.%{_uuid}%}%. (found!)", "info")
						#?DELETE HOME=
						set {_tmp.name} to {homev3.name.%{_n}%.%{_uuid}%}
						delete {homev3.name.%{_n}%.%{_uuid}%}
						delete {homev3.loc.%{_n}%.%{_uuid}%}
						debug(player, "deleted. name: %{homev3.name.%{_n}%.%{_uuid}%}%, loc: %{homev3.loc.%{_n}%.%{_uuid}%}%", "info")
						debug(player, "None = Successfully Deleted", "info")
						debug(player, "deleting amount (%{homev3.amount.%{_uuid}%}%)", "info")
						remove 1 from {homev3.amount.%{_uuid}%}
						debug(player, "Success(%{homev3.amount.%{_uuid}%}%)", "info-green")
						#?===
						delete {homev3.limitcount.%player%}
						send "%{homev3.prefix}% &cHome(&a%{_tmp.name}%&c)を削除しました!"
						homev3list_lite(player)
						hv3setpi(player)
						stop
					add 1 to {_n}
				send "&cそのようなHomeは存在しません! 正しく入力しているか確認してください。"
				stop
			#*Home Reset
			if arg-1 is "reset":
				if {homev3.reset.confirm.%player%} is not set:
					send "&c&l&m======&r&4[&e&lWARNING!&4]&c&l&m======"
					send "&cこの操作を行うと、あなたが登録した&n全てのホーム&r&cが消去されます。"
					send "&c&lこの操作を取り消す事はできません!"
					send "&c実行する場合は、&n30秒以内に&r&cもう一度&e/homev3 reset&cを入力してください。"
					send "&c&l&m===================="
					hv3resetcountdown(player)
					set {homev3.reset.confirm.%player%} to 1
					stop
				send "&c[!]HomeV3のデータをリセット中..."
				debug(player, "Deleting home data...", "info-red")
				debug(player, "looping(12)", "info")
				set {_n} to 1
				send "UUID: %{_uuid}%"
				loop 13 times:
					debug(player, "[Home%{_n}%]: %{homev3.name.%{_n}%.%{_uuid}%}% (%{homev3.loc.%{_n}%.%{_uuid}%}%)", "info")
					delete {homev3.name.%{_n}%.%{_uuid}%}
					delete {homev3.loc.%{_n}%.%{_uuid}%}
					debug(player, "[Home%{_n}%]: Deleted", "info-red")
					add 1 to {_n}
					wait a tick
				debug(player, "Initializing HomeV3 GUI", "info")
				delete {homev3_gui.%player%}
				debug(player, "Success!", "info-green")
				debug(player, "Initializing HomeV3 Amount", "info")
				set {homev3.amount.%{_uuid}%} to 0
				debug(player, "Success!", "info-green")
				debug(player, "Deleting HomeV3 RespawnLoc", "info")
				delete {homev3.spawnloc.%{_uuid}%}
				delete {homev3.spawnname.%{_uuid}%}
				debug(player, "Success!", "info-green")
				homev3list_lite(player)
				wait a second
				send "%{homev3.prefix}% &aHomeV3のデータをリセットしました。"
				delete {homev3.reset.confirm.%player%}
				stop
			#*Home Share
			if arg-1 is "share":
				permcheck(player)
				set {_x} to {_arg2}
				set {_n} to 1
				debug(player, "count: %{homev3.limitcount.%player%}%", "info")
				loop {homev3.limitcount.%player%} time:
					if {_x} is {homev3.name.%{_n}%.%{_uuid}%}:
						debug(player, "found.", "info")
						#?Generate
						send "%{homev3.prefix}%&7生成中..."
						set {_done} to false
						while {_done} is false:
							debug(player, "Looping(Generating)", "info")
							set {_r} to randomnumgen(5)
							if {homev3.share::%{_r}%} is not set:
								set {homev3.share::%{_r}%} to {_r}
								set {hv3_share.loc.%{_r}%} to {homev3.loc.%{_n}%.%{_uuid}%}
								debug(player, "loc: %{hv3_share.loc.%{_r}%}%", "info")
								set {hv3_share.name.%{_r}%} to {homev3.name.%{_n}%.%{_uuid}%}
								debug(player, "name: %{hv3_share.name.%{_r}%}%", "info")
								set {hv3_share.logger.c1_uuid.%{_r}%} to {_uuid}
								add 1 to {_hv3_count.share.%{_uuid}%}
								debug(player, "sharecountLogger-uuid: %{hv3_share.logger.c1_uuid.%{_uuid}%}%", "info")
								set {_done} to true
								debug(player, "Done", "info")
								wait a tick
							else:
								debug(player, "Failed. Retrying", "error")
								wait a tick
						send "%{homev3.prefix}%&e%{_x}%&aの共有コードを生成しました!"
						send "&7共有したい人にこのコマンドを教えてください: &a/homev3 get &d%{_r}%"
						send "&c[!]このコードは10分後に失効します!!"
						hv3sharetimer({_r})
						delete {homev3.limitcount.%player%}
						stop
					add 1 to {_n}
			#*Home Get(share)
			if arg-1 is "get":
				send "%{homev3.prefix}%&7検索中..."
				set {_s} to arg-2
				if {homev3.share::%{_s}%} is set:
					debug(player, "found(%{_s}%)", "info")
					set {_r} to {_s}
				if {_r} is not set:
					send "%{homev3.prefix}%&cコードが見つかりませんでした...(コードが失効しているか、間違っています!)"
					stop
				if {hv3_share.name.%{_r}%} is not set:
					debug(player, "oops! share.name.%{_r}% is not found", "error")
					send "%{homev3.prefix}%&cエラーが発生しました! デバッグログを確認してください。"
					stop
				if {hv3_share.loc.%{_r}%} is not set:
					debug(player, "oops! share.loc.%{_r}% is not found", "error")
					send "%{homev3.prefix}%&cエラーが発生しました! デバッグログを確認してください。"
					stop
				send "%{homev3.prefix}%&aコードが見つかりました! &e%{hv3_share.name.%{_r}%}%&aを登録中です..."
				set {_hv3n} to {hv3_share.name.%{_r}%}
				set {_hv3l} to {hv3_share.loc.%{_r}%}
				set {_uuid} to {hv3_share.logger.c1_uuid.%{_r}%}
				add 1 to {_hv3_count.get.%{_uuid}%}
				homev3set(player, {_hv3n}, {_hv3l})
			#*Home Setspawn
			if arg-1 is "setspawn":
				if arg-2 is not set:
					send "%{homev3.prefix}%&cホーム名を指定してください!"
					stop
				permcheck(player)
				set {_n} to 1
				loop {homev3.limitcount.%player%} time:
					if {homev3.name.%{_n}%.%{_uuid}%} is {_arg2}:
						set {homev3.spawnloc.%{_uuid}%} to {homev3.loc.%{_n}%.%{_uuid}%}
						set {homev3.spawnname.%{_uuid}%} to {homev3.name.%{_n}%.%{_uuid}%}
						send "%{homev3.prefix}%&aリスポーン地点を%{homev3.name.%{_n}%.%{_uuid}%}%に設定しました!"
						stop
					add 1 to {_n}
				send "%{homev3.prefix}%&cそのホーム名は存在しません!"
			#*HOME GUI
			if arg-1 is "gui":
				if {homev3_gui.%player%} is not set:
					buildhv3gui(player)
					open {hv3gui_generating} to player
					stop
				open {homev3_gui.%player%} to player
			else:
				send "&carg-2 error(unknown command)"
				send "&a/homev3 help&7でコマンドを確認できます!"
			
#!Home Debug=============================================================================
			if arg-1 is "debug":
				permcheck(player)
				send ""
				send "HomeV3-Debug"
				send ""
				send "homev3.amount -> &a%{homev3.amount.%{_uuid}%}%"
				send "homev3.maxamount -> &a%{homev3.limitcount.%player%}%"
				homev3list(player)
				wait a tick
				send ""
				send "registered home -> &a%{temp.hv3_list.%player%}%"
				set {_n} to 1
				send "HomeList:"
				loop {homev3.limitcount.%player%} time:
					send "%{_n}%. -> &a%{homev3.name.%{_n}%.%{_uuid}%}%"
					send "(Loc -> &a%{homev3.name.%{_n}%.%{_uuid}%}%&r)"
					send ""
					wait a tick
				send "END"
				send ""
#!Home Debug=============================================================================

#!ADMIN COMMAND==========================================================================
command /homev3admin [<text>]:
	permission: admin
	trigger:
		if arg-1 is not set:
			send "&carg-1が指定されていません。"
			send "&7/homev3admion (deletegui/deletespawn/gengui)"
			stop
		if arg-1 is "deletegui":
			send ""


#!=======[HV3-RESPAWN]=======
on respawn:
	set {_uuid} to player's uuid
	if {homev3.spawnloc.%{_uuid}%} is set:
		teleport player to {homev3.spawnloc.%{_uuid}%}
		if {homev3.spawnname.%{_uuid}%} is not set:
			send "&cエラーが発生しました。"
			debug(player, "homev3.spawnname is null.", "error")
		send "&7おかえりなさい!"
		send "%{homev3.prefix}%&aリスポーン地点(%{homev3.spawnname.%{_uuid}%}%)にテレポートしました!"
#?DEBUG
command /removehv3respawn:
	permission: admin
	trigger:
		set {_uuid} to player's uuid
		delete {homev3.spawnloc.%{_uuid}%}
		delete {homev3.spawnname.%{_uuid}%}
		send "Success"

command /removehv3gui:
	permission: admin
	trigger:
		delete {homev3_gui.%player%}
#!=======[HV3-RESPAWN]=======

#!=======[HV3-GUI]=======
on inventory click:
	if clicked inventory is {homev3_gui.%player%}:
		cancel event
		send "Clicked %event-item%"
		if clicked slot is 53:
			send "close(53)"
			close player's inventory
		if clicked slot is 25:
			send "reset(25)"
			hv3gui_menu(player, "reset")
		if clicked slot is 19:
			send "homelist(19)"
			hv3gui_menu(player, "homelist")
		if clicked slot is 21:
			send "homedel(19)"
			hv3gui_menu(player, "homedelete")
		if clicked slot is 23:
			send "homeset(23)"
			hv3gui_menu(player, "homelist")
		if clicked slot is 31:
			send "homeshare(31)"
			hv3gui_menu(player, "homeshare")
		if clicked slot is 29:
			send "homewarp(29)"
			hv3gui_menu(player, "homewarp")
		if clicked slot is 33:
			send "homeget(33)"
			hv3gui_menu(player, "homeget")
#!=======[HV3-GUI]=======



#!=======[FUNCTIONS]=======
#メモ
#STONE: 1, BRONZE: 3, IRON: 4, GOLD: 5, DIAMOND: 6, PLATINA: 7, MITHRIL: 8, ORICHALCUM: 9, ADAMANTITE: 12
function permcheck(p: player):
	if {_p} has permission "homev3.homelimit.1":
		set {homev3.limitcount.%{_p}%} to 1
	if {_p} has permission "homev3.homelimit.3":
		set {homev3.limitcount.%{_p}%} to 3
	if {_p} has permission "homev3.homelimit.4":
		set {homev3.limitcount.%{_p}%} to 4
	if {_p} has permission "homev3.homelimit.5":
		set {homev3.limitcount.%{_p}%} to 5
	if {_p} has permission "homev3.homelimit.6":
		set {homev3.limitcount.%{_p}%} to 6
	if {_p} has permission "homev3.homelimit.7":
		set {homev3.limitcount.%{_p}%} to 7
	if {_p} has permission "homev3.homelimit.8":
		set {homev3.limitcount.%{_p}%} to 8
	if {_p} has permission "homev3.homelimit.9":
		set {homev3.limitcount.%{_p}%} to 9
	if {_p} has permission "homev3.homelimit.12" or "op":
		set {homev3.limitcount.%{_p}%} to 12

#?help homev3
function homev3help(p: player):
	send "&7=================" to {_p}
	send "&bHome %{hv3.version}% &8- &aCommands" to {_p}
	send "&a/homev3 warp ホーム名 &7- 登録したホームにワープできます!" to {_p}
	send "&a/homev3 set ホーム名 &7- ホームを登録します!" to {_p}
	send "&a/homev3 delete ホーム名 &7- ホームを削除します!" to {_p}
	send "&a/homev3 help &7- このヘルプを見れます!" to {_p}
	send "&a/homev3 &dshare &aホーム名 &7- ホームをシェアできます! &e[NEW!]" to {_p}
	send "&a/homev3 &dget &aホーム名 &7- シェアされたホームを入手します! &e[NEW!]" to {_p}
	send "&c/homev3 reset &7- あなたのHomeV3を&c&l削除&7します!!" to {_p}
	send "&b=================" to {_p}

#?home表示(create cache)
function homev3list(p: player):
	set {_n} to 1
	set {_n2} to 1
	set {_uuid} to {_p}'s uuid
	send "&7Creating list" to {_p}
	loop 12 time:
		if {homev3.name.%{_n}%.%{_uuid}%} is set:
			set {_h.%{_n2}%} to {homev3.name.%{_n}%.%{_uuid}%}
			add 1 to {_n2}
		add 1 to {_n}
	set {_x} to {_n2}
	set {_n2} to 0
	loop {_x} time:
		add {_h.%{_n2}%} to {_hv3_list.%{_p}%::*}
		add 1 to {_n2}
	set {temp.hv3_list.%{_p}%} to join {_hv3_list.%{_p}%::*} by " "
	if {temp.hv3_list.%{_p}%} is not set:
		set {temp.hv3_list.%{_p}%} to "無し"
	send "&7done" to {_p}

function homev3list_lite(p: player):
	send "&7Creating list(background)" to {_p}
	set {_n} to 1
	set {_n2} to 1
	set {_uuid} to {_p}'s uuid
	loop 12 time:
		if {homev3.name.%{_n}%.%{_uuid}%} is set:
			set {_h.%{_n2}%} to {homev3.name.%{_n}%.%{_uuid}%}
			add 1 to {_n2}
		add 1 to {_n}
		wait a tick
	set {_x} to {_n2}
	set {_n2} to 0
	loop {_x} time:
		add {_h.%{_n2}%} to {_hv3_list.%{_p}%::*}
		add 1 to {_n2}
		wait a tick
	send "&8List: %{_hv3_list.%{_p}%::*}%" to {_p}
	set {temp.hv3_list.%{_p}%} to join {_hv3_list.%{_p}%::*} by " "
	if {temp.hv3_list.%{_p}%} is not set:
		set {temp.hv3_list.%{_p}%} to "無し"
	send "&7done" to {_p}

command /hv3sharenumdel [<number>]:
	permission: admin
	trigger:
		set {_r} to arg-1
		remove {_r} from {homev3.share::*}
		send "%{homev3.share::*}%"
function hv3sharetimer(r: number):
	send "added sharetimer (%{_r}%)" to console
	wait 10 minutes
	delete {hv3_share.loc.%{_r}%}
	delete {hv3_share.name.%{_r}%}
	remove {_r} from {homev3.share::*}
	send "deleted hv3 share key(%{_r}%)" to console


function homev3set(p: player, x: text, l: location):
	set {_uuid} to {_p}'s uuid
	if {homev3.amount.%{_uuid}%} is not set:
		set {homev3.amount.%{_uuid}%} to 0
	permcheck({_p})
	set {_n} to 1
	send "&7amount: %{homev3.amount.%{_uuid}%}%" to {_p}
	send "&7limit: %{homev3.limitcount.%{_p}%}%" to {_p}
	#?if reached max amount
	if {homev3.amount.%{_uuid}%} >= {homev3.limitcount.%{_p}%}:
		send "&eamount is %{homev3.amount.%{_uuid}%}%. but max is %{homev3.limitcount.%{_p}%}% (reached max amount)" to {_p}
		send "&cこれ以上Homeを追加できません!他のホームを消してからもう一度試してください!" to {_p}
		delete {homev3.limitcount.%{_p}%}
		stop
	loop {homev3.limitcount.%{_p}%} time:
		if {_x} is {homev3.name.%{_n}%.%{_uuid}%}:
			send "&earg-2 is %{homev3.name.%{_n}%.%{_uuid}%}%. (already added name)" to {_p}
			send "&cそのホーム名は既に存在しています! 別の名前にしてください!" to {_p}
			delete {homev3.limitcount.%{_p}%}
			stop
		send "&7arg-2 is not %{homev3.name.%{_n}%.%{_uuid}%}%." to {_p}
		add 1 to {_n}
	send "&7checked(ok)" to {_p}
	
	set {_n} to 1
	loop {homev3.limitcount.%{_p}%} time:
		send "&7count: %{_n}%" to {_p}
		if {homev3.name.%{_n}%.%{_uuid}%} is not set:
			add 1 to {homev3.amount.%{_uuid}%}
			set {homev3.name.%{_n}%.%{_uuid}%} to {_x}
			send "&7name: %{homev3.name.%{_n}%.%{_uuid}%}%" to {_p}
			set {homev3.loc.%{_n}%.%{_uuid}%} to {_l}
			send "&7loc: %{homev3.loc.%{_n}%.%{_uuid}%}%" to {_p}
			send "%{homev3.prefix}% &a新しいHome(&e%{homev3.name.%{_n}%.%{_uuid}%}%&a)を登録しました!" to {_p}
			homev3list_lite({_p})
			hv3setpi({_p})
			delete {homev3.limitcount.%{_p}%}
			stop
		send "&ehome.number %{_n}% is set" to {_p}
		add 1 to {_n}
	send "&cfailed(home is full / loop ended)" to {_p}
	send "&cError! 何らかの問題により処理が失敗しました。 デバッグログを確認してください!" to {_p}
	delete {homev3.limitcount.%{_p}%}
	stop

function buildhv3gui(p: player):
	set {homev3_gui.%{_p}%} to chest inventory with 6 row named "&bHome&dV3 &8| &8メニュー"
	set {_glass} to light gray glass pane named "&8 "
	set {_glass.green} to lime glass pane named "&8 "
	set {_s} to 0
	loop 9 times:
		set slot {_s} of {homev3_gui.%{_p}%} to {_glass.green}
		add 1 to {_s}
		wait a tick
	loop 36 times:
		set slot {_s} of {homev3_gui.%{_p}%} to {_glass}
		add 1 to {_s}
		wait a tick
	loop 9 times:
		set slot {_s} of {homev3_gui.%{_p}%} to {_glass.green}
		add 1 to {_s}
		wait a tick
	set slot 53 of {homev3_gui.%{_p}%} to barrier named "&c閉じる"
	set slot 19 of {homev3_gui.%{_p}%} to bookshelf named "&a登録したホームの一覧"
	set slot 21 of {homev3_gui.%{_p}%} to redstone block named "&cホームを削除する!"
	set slot 23 of {homev3_gui.%{_p}%} to book named "&aリスポーン地点を設定する!"
	set slot 25 of {homev3_gui.%{_p}%} to tnt named "&bHome&dV3&cを&lリセット&r&cする!"
	set slot 29 of {homev3_gui.%{_p}%} to ender pearl named "&b登録したホームにワープする!"
	set slot 31 of {homev3_gui.%{_p}%} to comparator named "&eホームをシェアする!"
	set slot 33 of {homev3_gui.%{_p}%} to compass named "&eシェアされたホームを入手する!"
	hv3setpi({_p})
	close {_p}'s inventory
	wait a tick
	open {homev3_gui.%{_p}%} to {_p}

function hv3setpi(p: player): #*Player info item
	permcheck({_p})
	set {_uuid} to {_p}'s uuid
	set {_maxh} to {homev3.limitcount.%{_p}%}
	set {_curh} to {homev3.amount.%{_uuid}%}
	set {_pi} to {_p}'s skull named "&a%{_p}%の情報"
	set line 1 of lore of {_pi} to "&7ホーム所有数: &a%{_curh}%&8/%{_maxh}%"
	if {_curh} >= {_maxh}: #*所持数がmaxの時に赤文字化
		set line 1 of lore of {_pi} to "&cホーム所有数: &c%{_curh}%&7/%{_maxh}%"
	set line 2 of lore of {_pi} to "&7あなたがホームをシェアした回数: %{_hv3_count.share.%{_uuid}%}%"
	set line 3 of lore of {_pi} to "&7あなたのシェアしたホームがGetされた回数: %{_hv3_count.get.%{_uuid}%}%"
	set line 4 of lore of {_pi} to "&7text2"
	set slot 49 of {homev3_gui.%{_p}%} to {_pi}

function hv3gui_menu(p: player, mode: text = "null"): #*HV3-GUI用
	if {_mode} is "null":
		send "&cエラーが発生しました。" to {_p}
		debug({_p}, "hv3gui_menu: null", "error")
	if {_mode} is "reset":
		send "menu_reset" to {_p}
		close {_p}'s inventory
		open {_hv3.menu.%{_p}%} to {_p}
	else:
		send "&cエラーが発生しました。" to {_p}
		debug({_p}, "hv3gui_menu: mode not found", "error")

function hv3resetcountdown(p: player):
	wait 30 seconds
	if {homev3.reset.confirm.%{_p}%} is set:
		delete {homev3.reset.confirm.%{_p}%}
		send "%{homev3.prefix}%&a30秒以内に&e/homev3 reset&aが入力されなかったため、キャンセルされました。"  to {_p}
#!=======[FUNCTIONS]=======