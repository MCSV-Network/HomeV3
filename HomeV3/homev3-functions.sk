#!=======[FUNCTIONS]=======
#メモ
#STONE: 1, BRONZE: 3, IRON: 4, GOLD: 5, DIAMOND: 6, PLATINA: 7, MITHRIL: 8, ORICHALCUM: 9, ADAMANTITE: 12
function permcheck(p: player):
	if {_p} has permission "homev3.homelimit.1":
		set {homev3.limitcount.%{_p}%} to 3
	if {_p} has permission "homev3.homelimit.3":
		set {homev3.limitcount.%{_p}%} to 4
	if {_p} has permission "homev3.homelimit.4":
		set {homev3.limitcount.%{_p}%} to 5
	if {_p} has permission "homev3.homelimit.5":
		set {homev3.limitcount.%{_p}%} to 6
	if {_p} has permission "homev3.homelimit.6":
		set {homev3.limitcount.%{_p}%} to 7
	if {_p} has permission "homev3.homelimit.7":
		set {homev3.limitcount.%{_p}%} to 8
	if {_p} has permission "homev3.homelimit.8":
		set {homev3.limitcount.%{_p}%} to 9
	if {_p} has permission "homev3.homelimit.9":
		set {homev3.limitcount.%{_p}%} to 10
	if {_p} has permission "homev3.homelimit.12" or "op":
		set {homev3.limitcount.%{_p}%} to 13
	else:
		set {homev3.limitcount.%{_p}%} to 3

#?help homev3
function homev3help(p: player):
	send "&7=================" to {_p}
	send "&bHomeV3 &8- &aCommands" to {_p}
	send "&a/homev3 help &7- このヘルプを見れます!" to {_p}
	send "&a/homev3 warp ホーム名 &7- 登録したホームにワープできます!" to {_p}
	send "&a/homev3 set ホーム名 &7- ホームを登録します!" to {_p}
	send "&a/homev3 delete ホーム名 &7- ホームを削除します!" to {_p}
	send "&c/homev3 reset &7- あなたのHomeV3を&c&l削除&7します!!" to {_p}
	send "&a/homev3 setspawn ホーム名 &7- リスポーン地点を設定します! &e[NEW!]" to {_p}
	send "&a/homev3 &dshare &aホーム名 &7- ホームをシェアできます! &e[NEW!]" to {_p}
	send "&a/homev3 &dget &aホーム名 &7- シェアされたホームを入手します! &e[NEW!]" to {_p}
	send "&a/homev3 debug &7- HomeV3のデバッグに使うメッセージを表示します。" to {_p}
	send "&b=================" to {_p}

#?home表示(create cache)
function homev3list(p: player):
	set {_n} to 1
	set {_n2} to 1
	set {_uuid} to {_p}'s uuid
	send "&7Creating list" to {_p}
	loop 13 time:
		if {homev3.name.%{_n}%.%{_uuid}%} is set:
			set {_h.%{_n2}%} to {homev3.name.%{_n}%.%{_uuid}%}
			add 1 to {_n2}
		add 1 to {_n}
	set {_x} to {_n2}
	set {_n2} to 0
	loop {_x} time:
		add {_h.%{_n2}%} to {_hv3_list.%{_p}%::*}
		add 1 to {_n2}
	set {temp.hv3_list.%{_p}%} to join {_hv3_list.%{_p}%::*} by " "
	if {temp.hv3_list.%{_p}%} is not set:
		set {temp.hv3_list.%{_p}%} to "無し"
	send "&7done" to {_p}

function homev3list_lite(p: player):
	send "&7Creating list(background)" to {_p}
	set {_n} to 1
	set {_n2} to 1
	set {_uuid} to {_p}'s uuid
	loop 13 time:
		if {homev3.name.%{_n}%.%{_uuid}%} is set:
			set {_h.%{_n2}%} to {homev3.name.%{_n}%.%{_uuid}%}
			add 1 to {_n2}
		add 1 to {_n}
		wait a tick
	set {_x} to {_n2}
	set {_n2} to 0
	loop {_x} time:
		add {_h.%{_n2}%} to {_hv3_list.%{_p}%::*}
		add 1 to {_n2}
		wait a tick
	send "&8List: %{_hv3_list.%{_p}%::*}%" to {_p}
	set {temp.hv3_list.%{_p}%} to join {_hv3_list.%{_p}%::*} by " "
	if {temp.hv3_list.%{_p}%} is not set:
		set {temp.hv3_list.%{_p}%} to "無し"
	send "&7done" to {_p}

command /hv3sharenumdel [<number>]:
	permission: admin
	trigger:
		set {_r} to arg-1
		remove {_r} from {homev3.share::*}
		send "%{homev3.share::*}%"
function hv3sharetimer(r: number):
	send "added sharetimer (%{_r}%)" to console
	wait 10 minutes
	delete {hv3_share.loc.%{_r}%}
	delete {hv3_share.name.%{_r}%}
	remove {_r} from {homev3.share::*}
	send "deleted hv3 share key(%{_r}%)" to console


function homev3set(p: player, x: text, l: location):
	set {_uuid} to {_p}'s uuid
	if {homev3.amount.%{_uuid}%} is not set:
		set {homev3.amount.%{_uuid}%} to 0
	permcheck({_p})
	set {_n} to 1
	send "&7amount: %{homev3.amount.%{_uuid}%}%" to {_p}
	send "&7limit: %{homev3.limitcount.%{_p}%}%" to {_p}
	#?if reached max amount
	if {homev3.amount.%{_uuid}%} >= {homev3.limitcount.%{_p}%}:
		send "&eamount is %{homev3.amount.%{_uuid}%}%. but max is %{homev3.limitcount.%{_p}%}% (reached max amount)" to {_p}
		send "&cこれ以上Homeを追加できません!他のホームを消してからもう一度試してください!" to {_p}
		delete {homev3.limitcount.%{_p}%}
		stop
	loop {homev3.limitcount.%{_p}%} time:
		if {_x} is {homev3.name.%{_n}%.%{_uuid}%}:
			send "&earg-2 is %{homev3.name.%{_n}%.%{_uuid}%}%. (already added name)" to {_p}
			send "&cそのホーム名は既に存在しています! 別の名前にしてください!" to {_p}
			delete {homev3.limitcount.%{_p}%}
			stop
		send "&7arg-2 is not %{homev3.name.%{_n}%.%{_uuid}%}%." to {_p}
		add 1 to {_n}
	send "&7checked(ok)" to {_p}
	
	set {_n} to 1
	loop {homev3.limitcount.%{_p}%} time:
		send "&7count: %{_n}%" to {_p}
		if {homev3.name.%{_n}%.%{_uuid}%} is not set:
			add 1 to {homev3.amount.%{_uuid}%}
			set {homev3.name.%{_n}%.%{_uuid}%} to {_x}
			send "&7name: %{homev3.name.%{_n}%.%{_uuid}%}%" to {_p}
			set {homev3.loc.%{_n}%.%{_uuid}%} to {_l}
			send "&7loc: %{homev3.loc.%{_n}%.%{_uuid}%}%" to {_p}
			send "%{homev3.prefix}% &a新しいHome(&e%{homev3.name.%{_n}%.%{_uuid}%}%&a)を登録しました!" to {_p}
			homev3list_lite({_p})
			hv3event({_p}, "homeamountchange")
			delete {homev3.limitcount.%{_p}%}
			stop
		send "&ehome.number %{_n}% is set" to {_p}
		add 1 to {_n}
	send "&cfailed(home is full / loop ended)" to {_p}
	send "&cError! 何らかの問題により処理が失敗しました。 デバッグログを確認してください!" to {_p}
	delete {homev3.limitcount.%{_p}%}
	stop


#hv3event(player, "homeamountchange")

function hv3event(p: player, event: text):
	if {_event} is "homeamountchange":
		hv3setpi({_p})
		delete {hv3gui.p_homelist.%{_p}%}
		delete {hv3gui.p_homedel.%{_p}%}

function hv3resetcountdown(p: player):
	wait 30 seconds
	if {homev3.reset.confirm.%{_p}%} is set:
		delete {homev3.reset.confirm.%{_p}%}
		send "%{homev3.prefix}%&a30秒以内に&e/homev3 reset&aが入力されなかったため、キャンセルされました。"  to {_p}

#!=======[FUNCTIONS]=======