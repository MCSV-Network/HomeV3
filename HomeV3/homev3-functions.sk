#!=======[FUNCTIONS]=======
#メモ
#STONE: 1, BRONZE: 3, IRON: 4, GOLD: 5, DIAMOND: 6, PLATINA: 7, MITHRIL: 8, ORICHALCUM: 9, ADAMANTITE: 12
function permcheck(p: player):
	if {_p} has permission "homev3.homelimit.1":
		set {homev3.limitcount.%{_p}%} to 2
	if {_p} has permission "homev3.homelimit.3":
		set {homev3.limitcount.%{_p}%} to 4
	if {_p} has permission "homev3.homelimit.4":
		set {homev3.limitcount.%{_p}%} to 5
	if {_p} has permission "homev3.homelimit.5":
		set {homev3.limitcount.%{_p}%} to 6
	if {_p} has permission "homev3.homelimit.6":
		set {homev3.limitcount.%{_p}%} to 7
	if {_p} has permission "homev3.homelimit.7":
		set {homev3.limitcount.%{_p}%} to 8
	if {_p} has permission "homev3.homelimit.8":
		set {homev3.limitcount.%{_p}%} to 9
	if {_p} has permission "homev3.homelimit.9":
		set {homev3.limitcount.%{_p}%} to 10
	if {_p} has permission "homev3.homelimit.12" or "op":
		set {homev3.limitcount.%{_p}%} to 13

#?help homev3
function homev3help(p: player):
	send "&7=================" to {_p}
	send "&bHome %{hv3.version}% &8- &aCommands" to {_p}
	send "&a/homev3 warp ホーム名 &7- 登録したホームにワープできます!" to {_p}
	send "&a/homev3 set ホーム名 &7- ホームを登録します!" to {_p}
	send "&a/homev3 delete ホーム名 &7- ホームを削除します!" to {_p}
	send "&a/homev3 help &7- このヘルプを見れます!" to {_p}
	send "&a/homev3 &dshare &aホーム名 &7- ホームをシェアできます! &e[NEW!]" to {_p}
	send "&a/homev3 &dget &aホーム名 &7- シェアされたホームを入手します! &e[NEW!]" to {_p}
	send "&c/homev3 reset &7- あなたのHomeV3を&c&l削除&7します!!" to {_p}
	send "&b=================" to {_p}

#?home表示(create cache)
function homev3list(p: player):
	set {_n} to 1
	set {_n2} to 1
	set {_uuid} to {_p}'s uuid
	send "&7Creating list" to {_p}
	loop 13 time:
		if {homev3.name.%{_n}%.%{_uuid}%} is set:
			set {_h.%{_n2}%} to {homev3.name.%{_n}%.%{_uuid}%}
			add 1 to {_n2}
		add 1 to {_n}
	set {_x} to {_n2}
	set {_n2} to 0
	loop {_x} time:
		add {_h.%{_n2}%} to {_hv3_list.%{_p}%::*}
		add 1 to {_n2}
	set {temp.hv3_list.%{_p}%} to join {_hv3_list.%{_p}%::*} by " "
	if {temp.hv3_list.%{_p}%} is not set:
		set {temp.hv3_list.%{_p}%} to "無し"
	send "&7done" to {_p}

function homev3list_lite(p: player):
	send "&7Creating list(background)" to {_p}
	set {_n} to 1
	set {_n2} to 1
	set {_uuid} to {_p}'s uuid
	loop 13 time:
		if {homev3.name.%{_n}%.%{_uuid}%} is set:
			set {_h.%{_n2}%} to {homev3.name.%{_n}%.%{_uuid}%}
			add 1 to {_n2}
		add 1 to {_n}
		wait a tick
	set {_x} to {_n2}
	set {_n2} to 0
	loop {_x} time:
		add {_h.%{_n2}%} to {_hv3_list.%{_p}%::*}
		add 1 to {_n2}
		wait a tick
	send "&8List: %{_hv3_list.%{_p}%::*}%" to {_p}
	set {temp.hv3_list.%{_p}%} to join {_hv3_list.%{_p}%::*} by " "
	if {temp.hv3_list.%{_p}%} is not set:
		set {temp.hv3_list.%{_p}%} to "無し"
	send "&7done" to {_p}

command /hv3sharenumdel [<number>]:
	permission: admin
	trigger:
		set {_r} to arg-1
		remove {_r} from {homev3.share::*}
		send "%{homev3.share::*}%"
function hv3sharetimer(r: number):
	send "added sharetimer (%{_r}%)" to console
	wait 10 minutes
	delete {hv3_share.loc.%{_r}%}
	delete {hv3_share.name.%{_r}%}
	remove {_r} from {homev3.share::*}
	send "deleted hv3 share key(%{_r}%)" to console


function homev3set(p: player, x: text, l: location):
	set {_uuid} to {_p}'s uuid
	if {homev3.amount.%{_uuid}%} is not set:
		set {homev3.amount.%{_uuid}%} to 0
	permcheck({_p})
	set {_n} to 1
	send "&7amount: %{homev3.amount.%{_uuid}%}%" to {_p}
	send "&7limit: %{homev3.limitcount.%{_p}%}%" to {_p}
	#?if reached max amount
	if {homev3.amount.%{_uuid}%} >= {homev3.limitcount.%{_p}%}:
		send "&eamount is %{homev3.amount.%{_uuid}%}%. but max is %{homev3.limitcount.%{_p}%}% (reached max amount)" to {_p}
		send "&cこれ以上Homeを追加できません!他のホームを消してからもう一度試してください!" to {_p}
		delete {homev3.limitcount.%{_p}%}
		stop
	loop {homev3.limitcount.%{_p}%} time:
		if {_x} is {homev3.name.%{_n}%.%{_uuid}%}:
			send "&earg-2 is %{homev3.name.%{_n}%.%{_uuid}%}%. (already added name)" to {_p}
			send "&cそのホーム名は既に存在しています! 別の名前にしてください!" to {_p}
			delete {homev3.limitcount.%{_p}%}
			stop
		send "&7arg-2 is not %{homev3.name.%{_n}%.%{_uuid}%}%." to {_p}
		add 1 to {_n}
	send "&7checked(ok)" to {_p}
	
	set {_n} to 1
	loop {homev3.limitcount.%{_p}%} time:
		send "&7count: %{_n}%" to {_p}
		if {homev3.name.%{_n}%.%{_uuid}%} is not set:
			add 1 to {homev3.amount.%{_uuid}%}
			set {homev3.name.%{_n}%.%{_uuid}%} to {_x}
			send "&7name: %{homev3.name.%{_n}%.%{_uuid}%}%" to {_p}
			set {homev3.loc.%{_n}%.%{_uuid}%} to {_l}
			send "&7loc: %{homev3.loc.%{_n}%.%{_uuid}%}%" to {_p}
			send "%{homev3.prefix}% &a新しいHome(&e%{homev3.name.%{_n}%.%{_uuid}%}%&a)を登録しました!" to {_p}
			homev3list_lite({_p})
			hv3event({_p}, "homeamountchange")
			delete {homev3.limitcount.%{_p}%}
			stop
		send "&ehome.number %{_n}% is set" to {_p}
		add 1 to {_n}
	send "&cfailed(home is full / loop ended)" to {_p}
	send "&cError! 何らかの問題により処理が失敗しました。 デバッグログを確認してください!" to {_p}
	delete {homev3.limitcount.%{_p}%}
	stop

function buildhv3gui(p: player):
	set {homev3_gui.%{_p}%} to chest inventory with 6 row named "&bHome&dV3 &8| &8メニュー"
	set {_glass} to light gray glass pane named "&7"
	set {_glass.green} to lime glass pane named "&7"
	set {_s} to 0
	loop 9 times:
		set slot {_s} of {homev3_gui.%{_p}%} to {_glass.green}
		add 1 to {_s}
		wait a tick
	loop 36 times:
		set slot {_s} of {homev3_gui.%{_p}%} to {_glass}
		add 1 to {_s}
		wait a tick
	loop 9 times:
		set slot {_s} of {homev3_gui.%{_p}%} to {_glass.green}
		add 1 to {_s}
		wait a tick
	set slot 53 of {homev3_gui.%{_p}%} to barrier named "&c閉じる"
	set slot 19 of {homev3_gui.%{_p}%} to bookshelf named "&a登録したホームの一覧"
	set slot 21 of {homev3_gui.%{_p}%} to redstone block named "&cホームを削除する!"
	set slot 23 of {homev3_gui.%{_p}%} to book named "&aリスポーン地点を設定する!"
	set slot 25 of {homev3_gui.%{_p}%} to tnt named "&bHome&dV3&cを&lリセット&r&cする!"
	set slot 29 of {homev3_gui.%{_p}%} to ender pearl named "&b登録したホームにワープする!"
	set slot 31 of {homev3_gui.%{_p}%} to comparator named "&eホームをシェアする!"
	set slot 33 of {homev3_gui.%{_p}%} to compass named "&eシェアされたホームを入手する!"
	hv3setpi({_p})
	close {_p}'s inventory
	wait a tick
	open {homev3_gui.%{_p}%} to {_p}

function hv3setpi(p: player): #*Player info item
	permcheck({_p})
	set {_uuid} to {_p}'s uuid
	set {_maxh} to {homev3.limitcount.%{_p}%}
	set {_curh} to {homev3.amount.%{_uuid}%}
	set {_pi} to {_p}'s skull named "&a%{_p}%の情報"
	set line 1 of lore of {_pi} to "&7ホーム所有数: &a%{_curh}%&8/%{_maxh}%"
	if {_curh} >= {_maxh}: #*所持数がmaxの時に赤文字化
		set line 1 of lore of {_pi} to "&cホーム所有数: &c%{_curh}%&7/%{_maxh}%"
	set line 2 of lore of {_pi} to "&7あなたがホームをシェアした回数: %{hv3_count.share.%{_uuid}%}%"
	set line 3 of lore of {_pi} to "&7あなたのシェアしたホームがGetされた回数: %{hv3_count.get.%{_uuid}%}%"
	set line 4 of lore of {_pi} to "&7text2"
	set slot 49 of {homev3_gui.%{_p}%} to {_pi}

#hv3event(player, "homeamountchange")

function hv3event(p: player, event: text):
	if {_event} is "homeamountchange":
		hv3setpi({_p})
		delete {hv3gui.p_homelist.%{_p}%}
		delete {hv3gui.p_homedel.%{_p}%}

function hv3resetcountdown(p: player):
	wait 30 seconds
	if {homev3.reset.confirm.%{_p}%} is set:
		delete {homev3.reset.confirm.%{_p}%}
		send "%{homev3.prefix}%&a30秒以内に&e/homev3 reset&aが入力されなかったため、キャンセルされました。"  to {_p}

#!=======[FUNCTIONS]=======

#!=======[HV3-GUI]=======
on inventory click:
	if clicked inventory is {homev3_gui.%player%} or {hv3gui_generating} or {hv3gui.p_homelist.%player%} or {hv3gui.p_homedel.%player%}:
		cancel event
		send "Clicked %event-item%"
		set {_glass} to light gray glass pane named "&7"
		if clicked slot is {_glass}:
			debug(player, "Touch Glass")
			stop

		if clicked inventory is {homev3_gui.%player%}:
			if clicked slot is 53:
				send "close(53)"
				close player's inventory
			if clicked slot is 25:
				send "reset(25)"
				hv3gui_menu(player, "reset")
			if clicked slot is 19:
				send "homelist(19)"
				hv3gui_menu(player, "homelist")
			if clicked slot is 21:
				send "homedel(19)"
				hv3gui_menu(player, "homedelete")
			if clicked slot is 23:
				send "homeset(23)"
				hv3gui_menu(player, "homelist")
			if clicked slot is 31:
				send "homeshare(31)"
				hv3gui_menu(player, "homeshare")
			if clicked slot is 29:
				send "homewarp(29)"
				hv3gui_menu(player, "homewarp")
			if clicked slot is 33:
				send "homeget(33)"
				hv3gui_menu(player, "homeget")
			stop

		if clicked inventory is {hv3gui.p_homedel.%player%}:
			debug(player, "Checking HV3-HOMENAME")
			set {_x} to name of event-item
			send "CLICKED - %{_x}%"
			set {_n} to 0
			set {_uuid} to player's uuid
			loop 13 times:
				if {_x} is "&a%{homev3.name.%{_n}%.%{_uuid}%}%":
					send "Hit"
					set {_tmp.name} to {homev3.name.%{_n}%.%{_uuid}%}
					delete {homev3.name.%{_n}%.%{_uuid}%}
					delete {homev3.loc.%{_n}%.%{_uuid}%}
					remove 1 from {homev3.amount.%{_uuid}%}
					close player's inventory
					send "%{homev3.prefix}% &cHome(&a%{_tmp.name}%&c)を削除しました!"
					homev3list_lite(player)
					hv3event(player, "homeamountchange")
					stop
				add 1 to {_n}
			send "OOPSIE!"

#*HV3GUI function 
function hv3gui_menu(p: player, mode: text = "null"): #*HV3-GUI用
	if {_mode} is "null":
		send "&cエラーが発生しました。" to {_p}
		debug({_p}, "hv3gui_menu: null", "error")


	if {_mode} is "reset":
		send "menu_reset" to {_p}
		close {_p}'s inventory
		open {hv3gui_resetconfirm} to {_p}

	#*GEN
	if {_mode} is "homelist" or "homedelete" or "homewarp" or "homeshare":
		close {_p}'s inventory
		open {hv3gui_generating} to {_p}
		set {_glass} to light gray glass pane named "&7"
		set {_s} to 0
		if {_mode} is "homelist":
			set {_name.gtmp} to "&bHome&dV3 &7| &8ホーム一覧"
		if {_mode} is "homedelete":
			set {_name.gtmp} to "&c削除するホームを選択してください!"
		if {_mode} is "homewarp":
			set {_name.gtmp} to "&2ワープしたいホームを選択してください!"
		if {_mode} is "homeshare":
			set {_name.gtmp} to "&9共有したいホームを選択してください!"

		set {_guitemplate.tmp} to chest inventory with 6 row named {_name.gtmp}
		loop 53 times:
			set slot {_s} of {_guitemplate.tmp} to {_glass}
			add 1 to {_s}
			wait a tick
		set slot 53 of {_guitemplate.tmp} to barrier named "&c閉じる"


	if {_mode} is "homelist":
		send "menu_homelist" to {_p}
		if {hv3gui.p_homelist.%{_p}%} is not set:
			debug({_p}, "hv3gui: generating homelist GUI")
			set {hv3gui.p_homelist.%{_p}%} to {_guitemplate.tmp}
			set {_n} to 0
			set {_s} to 10
			set {_uuid} to {_p}'s uuid
			debug({_p}, "check homev3.name")
			loop 13 times:
				if {homev3.name.%{_n}%.%{_uuid}%} is set:
					set {_h} to oak door named "&a%{homev3.name.%{_n}%.%{_uuid}%}%"
					set {_x} to {homev3.loc.%{_n}%.%{_uuid}%}'s x-pos
					set {_y} to {homev3.loc.%{_n}%.%{_uuid}%}'s y-pos
					set {_z} to {homev3.loc.%{_n}%.%{_uuid}%}'s z-pos
					set {_w} to {homev3.loc.%{_n}%.%{_uuid}%}'s world
					set line 1 of lore of {_h} to "&e%{_w}% &7- &cX: %{_x}% &aY: %{_y}% &bZ: %{_z}%"
					set slot {_s} of {hv3gui.p_homelist.%{_p}%} to {_h}
					add 1 to {_s}
					if {_s} is 17 or 26 or 35 or 44:
						debug({_p}, "reached %{_s}%", "warn")
						add 2 to {_s}
				add 1 to {_n}
				wait a tick


		close {_p}'s inventory
		open {hv3gui.p_homelist.%{_p}%} to {_p}

	if {_mode} is "homedelete":
		send "menu_homedelete" to {_p}
		if {hv3gui.p_homedel.%{_p}%} is not set:
			debug({_p}, "hv3gui: generating homedelete GUI")
			set {hv3gui.p_homedel.%{_p}%} to {_guitemplate.tmp}
			set {_n} to 0
			set {_s} to 10
			set {_uuid} to {_p}'s uuid
			debug({_p}, "check homev3.name")
			loop 13 times:
				if {homev3.name.%{_n}%.%{_uuid}%} is set:
					set {_h} to oak door named "&a%{homev3.name.%{_n}%.%{_uuid}%}%"
					set {_x} to {homev3.loc.%{_n}%.%{_uuid}%}'s x-pos
					set {_y} to {homev3.loc.%{_n}%.%{_uuid}%}'s y-pos
					set {_z} to {homev3.loc.%{_n}%.%{_uuid}%}'s z-pos
					set {_w} to {homev3.loc.%{_n}%.%{_uuid}%}'s world
					set line 1 of lore of {_h} to "&cクリックでこのホームを削除!"
					set slot {_s} of {hv3gui.p_homedel.%{_p}%} to {_h}
					add 1 to {_s}
					if {_s} is 17 or 26 or 35 or 44:
						debug({_p}, "reached %{_s}%", "warn")
						add 2 to {_s}
				add 1 to {_n}
				wait a tick


		close {_p}'s inventory
		open {hv3gui.p_homedel.%{_p}%} to {_p}


	else:
		send "&cエラーが発生しました。" to {_p}
		debug({_p}, "hv3gui_menu: mode not found", "error")


#!=======[HV3-GUI]=======